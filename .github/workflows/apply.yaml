name: Apply
on:
  push:
    branches: 
      - main

env:
  TF_LOG: INFO
  TF_INPUT: false
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - id: init
      name: Terraform Init
      run: terraform init -backend-config="bucket=${{ vars.TERRAFORM_S3_BACKEND }}"

    - id: plan
      name: Terraform Plan
      env: 
        TF_VAR_eks_role: ${{ vars.LAB_ROLE }}
      run: terraform plan 

    - id: apply
      name: Terraform Apply
      env: 
        TF_VAR_eks_role: ${{ vars.LAB_ROLE }}
      run: terraform apply -auto-approve

  create-k8s-resoures:
    needs: terraform
    name: Create Common Resources Kubernetes
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: AWS Cli login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: |
          aws eks update-kubeconfig --name ${{ secrets.AWS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Apply kubernetes manifests
      run: |
        kubectl apply -f ./.kubernetes/nginx-ingress-controller.yaml